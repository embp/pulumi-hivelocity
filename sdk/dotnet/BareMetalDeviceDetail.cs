// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Hivelocity
{
    [HivelocityResourceType("hivelocity:index/bareMetalDeviceDetail:BareMetalDeviceDetail")]
    public partial class BareMetalDeviceDetail : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When set, prefer only bonded devices
        /// </summary>
        [Output("bonded")]
        public Output<bool?> Bonded { get; private set; } = null!;

        /// <summary>
        /// Device ID
        /// </summary>
        [Output("deviceId")]
        public Output<int> DeviceId { get; private set; } = null!;

        /// <summary>
        /// Force deployment of this Device ID (internal use only)
        /// </summary>
        [Output("forceDeviceId")]
        public Output<int?> ForceDeviceId { get; private set; } = null!;

        /// <summary>
        /// Hostname for this device
        /// </summary>
        [Output("hostname")]
        public Output<string> Hostname { get; private set; } = null!;

        /// <summary>
        /// IgnitionConfig ID
        /// </summary>
        [Output("ignitionId")]
        public Output<int?> IgnitionId { get; private set; } = null!;

        /// <summary>
        /// Last time this device was updated
        /// </summary>
        [Output("lastUpdated")]
        public Output<string> LastUpdated { get; private set; } = null!;

        /// <summary>
        /// Deploy device in this location
        /// </summary>
        [Output("locationName")]
        public Output<string> LocationName { get; private set; } = null!;

        /// <summary>
        /// Order ID
        /// </summary>
        [Output("orderId")]
        public Output<int> OrderId { get; private set; } = null!;

        /// <summary>
        /// Operating system to install on device
        /// </summary>
        [Output("osName")]
        public Output<string> OsName { get; private set; } = null!;

        /// <summary>
        /// Billing period for device
        /// </summary>
        [Output("period")]
        public Output<string> Period { get; private set; } = null!;

        /// <summary>
        /// Power status
        /// </summary>
        [Output("powerStatus")]
        public Output<string> PowerStatus { get; private set; } = null!;

        /// <summary>
        /// Primary IP of device
        /// </summary>
        [Output("primaryIp")]
        public Output<string> PrimaryIp { get; private set; } = null!;

        /// <summary>
        /// Product ID to pick from the stock
        /// </summary>
        [Output("productId")]
        public Output<int> ProductId { get; private set; } = null!;

        /// <summary>
        /// Product Name
        /// </summary>
        [Output("productName")]
        public Output<string> ProductName { get; private set; } = null!;

        /// <summary>
        /// ID of a SSH Key to apply for device
        /// </summary>
        [Output("publicSshKeyId")]
        public Output<int?> PublicSshKeyId { get; private set; } = null!;

        /// <summary>
        /// Post-install script for device
        /// </summary>
        [Output("script")]
        public Output<string?> Script { get; private set; } = null!;

        /// <summary>
        /// Service ID
        /// </summary>
        [Output("serviceId")]
        public Output<int> ServiceId { get; private set; } = null!;

        /// <summary>
        /// Tags to apply for device
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// VLAN ID
        /// </summary>
        [Output("vlanId")]
        public Output<int?> VlanId { get; private set; } = null!;


        /// <summary>
        /// Create a BareMetalDeviceDetail resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BareMetalDeviceDetail(string name, BareMetalDeviceDetailArgs args, CustomResourceOptions? options = null)
            : base("hivelocity:index/bareMetalDeviceDetail:BareMetalDeviceDetail", name, args ?? new BareMetalDeviceDetailArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BareMetalDeviceDetail(string name, Input<string> id, BareMetalDeviceDetailState? state = null, CustomResourceOptions? options = null)
            : base("hivelocity:index/bareMetalDeviceDetail:BareMetalDeviceDetail", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new global::Pulumi.Alias { Type = "hivelocity:index/bareMetalDevice:bareMetalDevice" },
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BareMetalDeviceDetail resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BareMetalDeviceDetail Get(string name, Input<string> id, BareMetalDeviceDetailState? state = null, CustomResourceOptions? options = null)
        {
            return new BareMetalDeviceDetail(name, id, state, options);
        }
    }

    public sealed class BareMetalDeviceDetailArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When set, prefer only bonded devices
        /// </summary>
        [Input("bonded")]
        public Input<bool>? Bonded { get; set; }

        /// <summary>
        /// Device ID
        /// </summary>
        [Input("deviceId")]
        public Input<int>? DeviceId { get; set; }

        /// <summary>
        /// Force deployment of this Device ID (internal use only)
        /// </summary>
        [Input("forceDeviceId")]
        public Input<int>? ForceDeviceId { get; set; }

        /// <summary>
        /// Hostname for this device
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// IgnitionConfig ID
        /// </summary>
        [Input("ignitionId")]
        public Input<int>? IgnitionId { get; set; }

        /// <summary>
        /// Last time this device was updated
        /// </summary>
        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        /// <summary>
        /// Deploy device in this location
        /// </summary>
        [Input("locationName", required: true)]
        public Input<string> LocationName { get; set; } = null!;

        /// <summary>
        /// Order ID
        /// </summary>
        [Input("orderId")]
        public Input<int>? OrderId { get; set; }

        /// <summary>
        /// Operating system to install on device
        /// </summary>
        [Input("osName", required: true)]
        public Input<string> OsName { get; set; } = null!;

        /// <summary>
        /// Billing period for device
        /// </summary>
        [Input("period")]
        public Input<string>? Period { get; set; }

        /// <summary>
        /// Power status
        /// </summary>
        [Input("powerStatus")]
        public Input<string>? PowerStatus { get; set; }

        /// <summary>
        /// Primary IP of device
        /// </summary>
        [Input("primaryIp")]
        public Input<string>? PrimaryIp { get; set; }

        /// <summary>
        /// Product ID to pick from the stock
        /// </summary>
        [Input("productId", required: true)]
        public Input<int> ProductId { get; set; } = null!;

        /// <summary>
        /// Product Name
        /// </summary>
        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        /// <summary>
        /// ID of a SSH Key to apply for device
        /// </summary>
        [Input("publicSshKeyId")]
        public Input<int>? PublicSshKeyId { get; set; }

        /// <summary>
        /// Post-install script for device
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// Service ID
        /// </summary>
        [Input("serviceId")]
        public Input<int>? ServiceId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to apply for device
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// VLAN ID
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public BareMetalDeviceDetailArgs()
        {
        }
        public static new BareMetalDeviceDetailArgs Empty => new BareMetalDeviceDetailArgs();
    }

    public sealed class BareMetalDeviceDetailState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When set, prefer only bonded devices
        /// </summary>
        [Input("bonded")]
        public Input<bool>? Bonded { get; set; }

        /// <summary>
        /// Device ID
        /// </summary>
        [Input("deviceId")]
        public Input<int>? DeviceId { get; set; }

        /// <summary>
        /// Force deployment of this Device ID (internal use only)
        /// </summary>
        [Input("forceDeviceId")]
        public Input<int>? ForceDeviceId { get; set; }

        /// <summary>
        /// Hostname for this device
        /// </summary>
        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        /// <summary>
        /// IgnitionConfig ID
        /// </summary>
        [Input("ignitionId")]
        public Input<int>? IgnitionId { get; set; }

        /// <summary>
        /// Last time this device was updated
        /// </summary>
        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        /// <summary>
        /// Deploy device in this location
        /// </summary>
        [Input("locationName")]
        public Input<string>? LocationName { get; set; }

        /// <summary>
        /// Order ID
        /// </summary>
        [Input("orderId")]
        public Input<int>? OrderId { get; set; }

        /// <summary>
        /// Operating system to install on device
        /// </summary>
        [Input("osName")]
        public Input<string>? OsName { get; set; }

        /// <summary>
        /// Billing period for device
        /// </summary>
        [Input("period")]
        public Input<string>? Period { get; set; }

        /// <summary>
        /// Power status
        /// </summary>
        [Input("powerStatus")]
        public Input<string>? PowerStatus { get; set; }

        /// <summary>
        /// Primary IP of device
        /// </summary>
        [Input("primaryIp")]
        public Input<string>? PrimaryIp { get; set; }

        /// <summary>
        /// Product ID to pick from the stock
        /// </summary>
        [Input("productId")]
        public Input<int>? ProductId { get; set; }

        /// <summary>
        /// Product Name
        /// </summary>
        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        /// <summary>
        /// ID of a SSH Key to apply for device
        /// </summary>
        [Input("publicSshKeyId")]
        public Input<int>? PublicSshKeyId { get; set; }

        /// <summary>
        /// Post-install script for device
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// Service ID
        /// </summary>
        [Input("serviceId")]
        public Input<int>? ServiceId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to apply for device
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// VLAN ID
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public BareMetalDeviceDetailState()
        {
        }
        public static new BareMetalDeviceDetailState Empty => new BareMetalDeviceDetailState();
    }
}
