// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Hivelocity
{
    public static class GetBareMetalDevice
    {
        public static Task<GetBareMetalDeviceResult> InvokeAsync(GetBareMetalDeviceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBareMetalDeviceResult>("hivelocity:index/getBareMetalDevice:getBareMetalDevice", args ?? new GetBareMetalDeviceArgs(), options.WithDefaults());

        public static Output<GetBareMetalDeviceResult> Invoke(GetBareMetalDeviceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBareMetalDeviceResult>("hivelocity:index/getBareMetalDevice:getBareMetalDevice", args ?? new GetBareMetalDeviceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBareMetalDeviceArgs : global::Pulumi.InvokeArgs
    {
        [Input("deviceId")]
        public int? DeviceId { get; set; }

        [Input("filters")]
        private List<Inputs.GetBareMetalDeviceFilterArgs>? _filters;
        public List<Inputs.GetBareMetalDeviceFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBareMetalDeviceFilterArgs>());
            set => _filters = value;
        }

        [Input("first")]
        public bool? First { get; set; }

        [Input("hostname")]
        public string? Hostname { get; set; }

        [Input("lastUpdated")]
        public string? LastUpdated { get; set; }

        [Input("locationName")]
        public string? LocationName { get; set; }

        [Input("orderId")]
        public int? OrderId { get; set; }

        [Input("osName")]
        public string? OsName { get; set; }

        [Input("period")]
        public string? Period { get; set; }

        [Input("powerStatus")]
        public string? PowerStatus { get; set; }

        [Input("primaryIp")]
        public string? PrimaryIp { get; set; }

        [Input("productId")]
        public int? ProductId { get; set; }

        [Input("productName")]
        public string? ProductName { get; set; }

        [Input("publicSshKeyId")]
        public int? PublicSshKeyId { get; set; }

        [Input("script")]
        public string? Script { get; set; }

        [Input("serviceId")]
        public int? ServiceId { get; set; }

        [Input("tags")]
        private List<string>? _tags;
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        [Input("vlanId")]
        public int? VlanId { get; set; }

        public GetBareMetalDeviceArgs()
        {
        }
        public static new GetBareMetalDeviceArgs Empty => new GetBareMetalDeviceArgs();
    }

    public sealed class GetBareMetalDeviceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("deviceId")]
        public Input<int>? DeviceId { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetBareMetalDeviceFilterInputArgs>? _filters;
        public InputList<Inputs.GetBareMetalDeviceFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBareMetalDeviceFilterInputArgs>());
            set => _filters = value;
        }

        [Input("first")]
        public Input<bool>? First { get; set; }

        [Input("hostname")]
        public Input<string>? Hostname { get; set; }

        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        [Input("locationName")]
        public Input<string>? LocationName { get; set; }

        [Input("orderId")]
        public Input<int>? OrderId { get; set; }

        [Input("osName")]
        public Input<string>? OsName { get; set; }

        [Input("period")]
        public Input<string>? Period { get; set; }

        [Input("powerStatus")]
        public Input<string>? PowerStatus { get; set; }

        [Input("primaryIp")]
        public Input<string>? PrimaryIp { get; set; }

        [Input("productId")]
        public Input<int>? ProductId { get; set; }

        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        [Input("publicSshKeyId")]
        public Input<int>? PublicSshKeyId { get; set; }

        [Input("script")]
        public Input<string>? Script { get; set; }

        [Input("serviceId")]
        public Input<int>? ServiceId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public GetBareMetalDeviceInvokeArgs()
        {
        }
        public static new GetBareMetalDeviceInvokeArgs Empty => new GetBareMetalDeviceInvokeArgs();
    }


    [OutputType]
    public sealed class GetBareMetalDeviceResult
    {
        public readonly int DeviceId;
        public readonly ImmutableArray<Outputs.GetBareMetalDeviceFilterResult> Filters;
        public readonly bool? First;
        public readonly string Hostname;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string LastUpdated;
        public readonly string LocationName;
        public readonly int OrderId;
        public readonly string OsName;
        public readonly string Period;
        public readonly string PowerStatus;
        public readonly string PrimaryIp;
        public readonly int ProductId;
        public readonly string ProductName;
        public readonly int? PublicSshKeyId;
        public readonly string Script;
        public readonly int ServiceId;
        public readonly ImmutableArray<string> Tags;
        public readonly int? VlanId;

        [OutputConstructor]
        private GetBareMetalDeviceResult(
            int deviceId,

            ImmutableArray<Outputs.GetBareMetalDeviceFilterResult> filters,

            bool? first,

            string hostname,

            string id,

            string lastUpdated,

            string locationName,

            int orderId,

            string osName,

            string period,

            string powerStatus,

            string primaryIp,

            int productId,

            string productName,

            int? publicSshKeyId,

            string script,

            int serviceId,

            ImmutableArray<string> tags,

            int? vlanId)
        {
            DeviceId = deviceId;
            Filters = filters;
            First = first;
            Hostname = hostname;
            Id = id;
            LastUpdated = lastUpdated;
            LocationName = locationName;
            OrderId = orderId;
            OsName = osName;
            Period = period;
            PowerStatus = powerStatus;
            PrimaryIp = primaryIp;
            ProductId = productId;
            ProductName = productName;
            PublicSshKeyId = publicSshKeyId;
            Script = script;
            ServiceId = serviceId;
            Tags = tags;
            VlanId = vlanId;
        }
    }
}
