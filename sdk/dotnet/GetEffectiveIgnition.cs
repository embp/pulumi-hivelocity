// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Hivelocity
{
    public static class GetEffectiveIgnition
    {
        public static Task<GetEffectiveIgnitionResult> InvokeAsync(GetEffectiveIgnitionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEffectiveIgnitionResult>("hivelocity:index/getEffectiveIgnition:getEffectiveIgnition", args ?? new GetEffectiveIgnitionArgs(), options.WithDefaults());

        public static Output<GetEffectiveIgnitionResult> Invoke(GetEffectiveIgnitionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEffectiveIgnitionResult>("hivelocity:index/getEffectiveIgnition:getEffectiveIgnition", args ?? new GetEffectiveIgnitionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEffectiveIgnitionArgs : global::Pulumi.InvokeArgs
    {
        [Input("deviceId", required: true)]
        public int DeviceId { get; set; }

        public GetEffectiveIgnitionArgs()
        {
        }
        public static new GetEffectiveIgnitionArgs Empty => new GetEffectiveIgnitionArgs();
    }

    public sealed class GetEffectiveIgnitionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("deviceId", required: true)]
        public Input<int> DeviceId { get; set; } = null!;

        public GetEffectiveIgnitionInvokeArgs()
        {
        }
        public static new GetEffectiveIgnitionInvokeArgs Empty => new GetEffectiveIgnitionInvokeArgs();
    }


    [OutputType]
    public sealed class GetEffectiveIgnitionResult
    {
        public readonly string Contents;
        public readonly int DeviceId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetEffectiveIgnitionResult(
            string contents,

            int deviceId,

            string id)
        {
            Contents = contents;
            DeviceId = deviceId;
            Id = id;
        }
    }
}
