// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Hivelocity
{
    public static class GetProduct
    {
        public static Task<GetProductResult> InvokeAsync(GetProductArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProductResult>("hivelocity:index/getProduct:getProduct", args ?? new GetProductArgs(), options.WithDefaults());

        public static Output<GetProductResult> Invoke(GetProductInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProductResult>("hivelocity:index/getProduct:getProduct", args ?? new GetProductInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProductArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetProductFilterArgs>? _filters;
        public List<Inputs.GetProductFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetProductFilterArgs>());
            set => _filters = value;
        }

        [Input("first")]
        public bool? First { get; set; }

        public GetProductArgs()
        {
        }
        public static new GetProductArgs Empty => new GetProductArgs();
    }

    public sealed class GetProductInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetProductFilterInputArgs>? _filters;
        public InputList<Inputs.GetProductFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetProductFilterInputArgs>());
            set => _filters = value;
        }

        [Input("first")]
        public Input<bool>? First { get; set; }

        public GetProductInvokeArgs()
        {
        }
        public static new GetProductInvokeArgs Empty => new GetProductInvokeArgs();
    }


    [OutputType]
    public sealed class GetProductResult
    {
        public readonly double AnnuallyLocationPremium;
        public readonly double BiennialLocationPremium;
        public readonly bool Core;
        public readonly string DataCenter;
        public readonly bool Edge;
        public readonly ImmutableArray<Outputs.GetProductFilterResult> Filters;
        public readonly bool? First;
        public readonly double HourlyLocationPremium;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly double MonthlyLocationPremium;
        public readonly double ProductAnnuallyPrice;
        public readonly string ProductBandwidth;
        public readonly double ProductBiennialPrice;
        public readonly string ProductCpu;
        public readonly string ProductCpuCores;
        public readonly ImmutableArray<string> ProductDisabledBillingPeriods;
        public readonly double ProductDisplayPrice;
        public readonly string ProductDrive;
        public readonly string ProductGpu;
        public readonly double ProductHourlyPrice;
        public readonly int ProductId;
        public readonly string ProductMemory;
        public readonly double ProductMonthlyPrice;
        public readonly string ProductName;
        public readonly bool ProductOnSale;
        public readonly double ProductOriginalPrice;
        public readonly double ProductQuarterlyPrice;
        public readonly double ProductSemiAnnuallyPrice;
        public readonly double ProductTriennialPrice;
        public readonly double QuarterlyLocationPremium;
        public readonly double SemiAnnuallyLocationPremium;
        public readonly string Stock;
        public readonly double TriennialLocationPremium;

        [OutputConstructor]
        private GetProductResult(
            double annuallyLocationPremium,

            double biennialLocationPremium,

            bool core,

            string dataCenter,

            bool edge,

            ImmutableArray<Outputs.GetProductFilterResult> filters,

            bool? first,

            double hourlyLocationPremium,

            string id,

            double monthlyLocationPremium,

            double productAnnuallyPrice,

            string productBandwidth,

            double productBiennialPrice,

            string productCpu,

            string productCpuCores,

            ImmutableArray<string> productDisabledBillingPeriods,

            double productDisplayPrice,

            string productDrive,

            string productGpu,

            double productHourlyPrice,

            int productId,

            string productMemory,

            double productMonthlyPrice,

            string productName,

            bool productOnSale,

            double productOriginalPrice,

            double productQuarterlyPrice,

            double productSemiAnnuallyPrice,

            double productTriennialPrice,

            double quarterlyLocationPremium,

            double semiAnnuallyLocationPremium,

            string stock,

            double triennialLocationPremium)
        {
            AnnuallyLocationPremium = annuallyLocationPremium;
            BiennialLocationPremium = biennialLocationPremium;
            Core = core;
            DataCenter = dataCenter;
            Edge = edge;
            Filters = filters;
            First = first;
            HourlyLocationPremium = hourlyLocationPremium;
            Id = id;
            MonthlyLocationPremium = monthlyLocationPremium;
            ProductAnnuallyPrice = productAnnuallyPrice;
            ProductBandwidth = productBandwidth;
            ProductBiennialPrice = productBiennialPrice;
            ProductCpu = productCpu;
            ProductCpuCores = productCpuCores;
            ProductDisabledBillingPeriods = productDisabledBillingPeriods;
            ProductDisplayPrice = productDisplayPrice;
            ProductDrive = productDrive;
            ProductGpu = productGpu;
            ProductHourlyPrice = productHourlyPrice;
            ProductId = productId;
            ProductMemory = productMemory;
            ProductMonthlyPrice = productMonthlyPrice;
            ProductName = productName;
            ProductOnSale = productOnSale;
            ProductOriginalPrice = productOriginalPrice;
            ProductQuarterlyPrice = productQuarterlyPrice;
            ProductSemiAnnuallyPrice = productSemiAnnuallyPrice;
            ProductTriennialPrice = productTriennialPrice;
            QuarterlyLocationPremium = quarterlyLocationPremium;
            SemiAnnuallyLocationPremium = semiAnnuallyLocationPremium;
            Stock = stock;
            TriennialLocationPremium = triennialLocationPremium;
        }
    }
}
