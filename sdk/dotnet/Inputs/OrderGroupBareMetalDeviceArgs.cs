// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Hivelocity.Inputs
{

    public sealed class OrderGroupBareMetalDeviceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When set, prefer only bonded devices
        /// </summary>
        [Input("bonded")]
        public Input<bool>? Bonded { get; set; }

        /// <summary>
        /// Device ID
        /// </summary>
        [Input("deviceId")]
        public Input<int>? DeviceId { get; set; }

        /// <summary>
        /// Force deployment of this Device ID (internal use only)
        /// </summary>
        [Input("forceDeviceId")]
        public Input<int>? ForceDeviceId { get; set; }

        /// <summary>
        /// Hostname for this device
        /// </summary>
        [Input("hostname", required: true)]
        public Input<string> Hostname { get; set; } = null!;

        /// <summary>
        /// IgnitionConfig ID
        /// </summary>
        [Input("ignitionId")]
        public Input<int>? IgnitionId { get; set; }

        /// <summary>
        /// Last time this device was updated
        /// </summary>
        [Input("lastUpdated")]
        public Input<string>? LastUpdated { get; set; }

        /// <summary>
        /// Deploy device in this location
        /// </summary>
        [Input("locationName", required: true)]
        public Input<string> LocationName { get; set; } = null!;

        /// <summary>
        /// Order ID
        /// </summary>
        [Input("orderId")]
        public Input<int>? OrderId { get; set; }

        /// <summary>
        /// Operating system to install on device
        /// </summary>
        [Input("osName", required: true)]
        public Input<string> OsName { get; set; } = null!;

        /// <summary>
        /// Billing period for device
        /// </summary>
        [Input("period")]
        public Input<string>? Period { get; set; }

        /// <summary>
        /// Power status
        /// </summary>
        [Input("powerStatus")]
        public Input<string>? PowerStatus { get; set; }

        /// <summary>
        /// Primary IP of device
        /// </summary>
        [Input("primaryIp")]
        public Input<string>? PrimaryIp { get; set; }

        /// <summary>
        /// Product ID to pick from the stock
        /// </summary>
        [Input("productId", required: true)]
        public Input<int> ProductId { get; set; } = null!;

        /// <summary>
        /// Product Name
        /// </summary>
        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        /// <summary>
        /// ID of a SSH Key to apply for device
        /// </summary>
        [Input("publicSshKeyId")]
        public Input<int>? PublicSshKeyId { get; set; }

        /// <summary>
        /// Post-install script for device
        /// </summary>
        [Input("script")]
        public Input<string>? Script { get; set; }

        /// <summary>
        /// Service ID
        /// </summary>
        [Input("serviceId")]
        public Input<int>? ServiceId { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Tags to apply for device
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// VLAN ID
        /// </summary>
        [Input("vlanId")]
        public Input<int>? VlanId { get; set; }

        public OrderGroupBareMetalDeviceArgs()
        {
        }
        public static new OrderGroupBareMetalDeviceArgs Empty => new OrderGroupBareMetalDeviceArgs();
    }
}
