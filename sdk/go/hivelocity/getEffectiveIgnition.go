// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package hivelocity

import (
	"context"
	"reflect"

	"github.com/embp/pulumi-hivelocity/sdk/go/hivelocity/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetEffectiveIgnition(ctx *pulumi.Context, args *GetEffectiveIgnitionArgs, opts ...pulumi.InvokeOption) (*GetEffectiveIgnitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEffectiveIgnitionResult
	err := ctx.Invoke("hivelocity:index/getEffectiveIgnition:getEffectiveIgnition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEffectiveIgnition.
type GetEffectiveIgnitionArgs struct {
	DeviceId int `pulumi:"deviceId"`
}

// A collection of values returned by getEffectiveIgnition.
type GetEffectiveIgnitionResult struct {
	Contents string `pulumi:"contents"`
	DeviceId int    `pulumi:"deviceId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetEffectiveIgnitionOutput(ctx *pulumi.Context, args GetEffectiveIgnitionOutputArgs, opts ...pulumi.InvokeOption) GetEffectiveIgnitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEffectiveIgnitionResult, error) {
			args := v.(GetEffectiveIgnitionArgs)
			r, err := GetEffectiveIgnition(ctx, &args, opts...)
			var s GetEffectiveIgnitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEffectiveIgnitionResultOutput)
}

// A collection of arguments for invoking getEffectiveIgnition.
type GetEffectiveIgnitionOutputArgs struct {
	DeviceId pulumi.IntInput `pulumi:"deviceId"`
}

func (GetEffectiveIgnitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEffectiveIgnitionArgs)(nil)).Elem()
}

// A collection of values returned by getEffectiveIgnition.
type GetEffectiveIgnitionResultOutput struct{ *pulumi.OutputState }

func (GetEffectiveIgnitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEffectiveIgnitionResult)(nil)).Elem()
}

func (o GetEffectiveIgnitionResultOutput) ToGetEffectiveIgnitionResultOutput() GetEffectiveIgnitionResultOutput {
	return o
}

func (o GetEffectiveIgnitionResultOutput) ToGetEffectiveIgnitionResultOutputWithContext(ctx context.Context) GetEffectiveIgnitionResultOutput {
	return o
}

func (o GetEffectiveIgnitionResultOutput) Contents() pulumi.StringOutput {
	return o.ApplyT(func(v GetEffectiveIgnitionResult) string { return v.Contents }).(pulumi.StringOutput)
}

func (o GetEffectiveIgnitionResultOutput) DeviceId() pulumi.IntOutput {
	return o.ApplyT(func(v GetEffectiveIgnitionResult) int { return v.DeviceId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEffectiveIgnitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEffectiveIgnitionResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEffectiveIgnitionResultOutput{})
}
